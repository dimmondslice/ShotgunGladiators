// Copyright 1998-2015 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/OscPrivatePCH.h"
#include "OSC.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCodeOSC() {}
class UScriptStruct* FOscDataElemStruct::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern OSC_API class UScriptStruct* Z_Construct_UScriptStruct_FOscDataElemStruct();
		extern OSC_API uint32 Get_Z_Construct_UScriptStruct_FOscDataElemStruct_CRC();
		extern OSC_API class UPackage* Z_Construct_UPackage_OSC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FOscDataElemStruct, Z_Construct_UPackage_OSC(), TEXT("OscDataElemStruct"), sizeof(FOscDataElemStruct), Get_Z_Construct_UScriptStruct_FOscDataElemStruct_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FOscDataElemStruct(FOscDataElemStruct::StaticStruct, TEXT("/Script/OSC"));
static struct FScriptStruct_OSC_StaticRegisterNativesFOscDataElemStruct
{
	FScriptStruct_OSC_StaticRegisterNativesFOscDataElemStruct()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("OscDataElemStruct")),new UScriptStruct::TCppStructOps<FOscDataElemStruct>);
	}
} ScriptStruct_OSC_StaticRegisterNativesFOscDataElemStruct;
	void UOscDispatcher::StaticRegisterNativesUOscDispatcher()
	{
	}
	IMPLEMENT_CLASS(UOscDispatcher, 3141986271);
	void UOscFunctionLibrary::StaticRegisterNativesUOscFunctionLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UOscFunctionLibrary::StaticClass(),"AddSendOscTarget",(Native)&UOscFunctionLibrary::execAddSendOscTarget);
		FNativeFunctionRegistrar::RegisterFunction(UOscFunctionLibrary::StaticClass(),"AsBool",(Native)&UOscFunctionLibrary::execAsBool);
		FNativeFunctionRegistrar::RegisterFunction(UOscFunctionLibrary::StaticClass(),"AsFloat",(Native)&UOscFunctionLibrary::execAsFloat);
		FNativeFunctionRegistrar::RegisterFunction(UOscFunctionLibrary::StaticClass(),"AsInt",(Native)&UOscFunctionLibrary::execAsInt);
		FNativeFunctionRegistrar::RegisterFunction(UOscFunctionLibrary::StaticClass(),"AsString",(Native)&UOscFunctionLibrary::execAsString);
		FNativeFunctionRegistrar::RegisterFunction(UOscFunctionLibrary::StaticClass(),"FromBool",(Native)&UOscFunctionLibrary::execFromBool);
		FNativeFunctionRegistrar::RegisterFunction(UOscFunctionLibrary::StaticClass(),"FromFloat",(Native)&UOscFunctionLibrary::execFromFloat);
		FNativeFunctionRegistrar::RegisterFunction(UOscFunctionLibrary::StaticClass(),"FromInt",(Native)&UOscFunctionLibrary::execFromInt);
		FNativeFunctionRegistrar::RegisterFunction(UOscFunctionLibrary::StaticClass(),"FromString",(Native)&UOscFunctionLibrary::execFromString);
		FNativeFunctionRegistrar::RegisterFunction(UOscFunctionLibrary::StaticClass(),"PopBool",(Native)&UOscFunctionLibrary::execPopBool);
		FNativeFunctionRegistrar::RegisterFunction(UOscFunctionLibrary::StaticClass(),"PopFloat",(Native)&UOscFunctionLibrary::execPopFloat);
		FNativeFunctionRegistrar::RegisterFunction(UOscFunctionLibrary::StaticClass(),"PopInt",(Native)&UOscFunctionLibrary::execPopInt);
		FNativeFunctionRegistrar::RegisterFunction(UOscFunctionLibrary::StaticClass(),"PopString",(Native)&UOscFunctionLibrary::execPopString);
		FNativeFunctionRegistrar::RegisterFunction(UOscFunctionLibrary::StaticClass(),"PushBool",(Native)&UOscFunctionLibrary::execPushBool);
		FNativeFunctionRegistrar::RegisterFunction(UOscFunctionLibrary::StaticClass(),"PushFloat",(Native)&UOscFunctionLibrary::execPushFloat);
		FNativeFunctionRegistrar::RegisterFunction(UOscFunctionLibrary::StaticClass(),"PushInt",(Native)&UOscFunctionLibrary::execPushInt);
		FNativeFunctionRegistrar::RegisterFunction(UOscFunctionLibrary::StaticClass(),"PushString",(Native)&UOscFunctionLibrary::execPushString);
		FNativeFunctionRegistrar::RegisterFunction(UOscFunctionLibrary::StaticClass(),"SendOsc",(Native)&UOscFunctionLibrary::execSendOsc);
	}
	IMPLEMENT_CLASS(UOscFunctionLibrary, 1731235963);
	void AOscReceiverActor::OnOscReceived(const FName& Address, const TArray<FOscDataElemStruct>& Data)
	{
		OscReceiverActor_eventOnOscReceived_Parms Parms;
		Parms.Address=Address;
		Parms.Data=Data;
		ProcessEvent(FindFunctionChecked(OSC_OnOscReceived),&Parms);
	}
	void AOscReceiverActor::StaticRegisterNativesAOscReceiverActor()
	{
	}
	IMPLEMENT_CLASS(AOscReceiverActor, 2965565812);
	void UOscReceiverComponent::StaticRegisterNativesUOscReceiverComponent()
	{
	}
	IMPLEMENT_CLASS(UOscReceiverComponent, 1306969529);
	void UOscSettings::StaticRegisterNativesUOscSettings()
	{
	}
	IMPLEMENT_CLASS(UOscSettings, 1079958212);
FName OSC_OnOscReceived = FName(TEXT("OnOscReceived"));
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintFunctionLibrary();
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	ENGINE_API class UClass* Z_Construct_UClass_UActorComponent();

	OSC_API class UScriptStruct* Z_Construct_UScriptStruct_FOscDataElemStruct();
	OSC_API class UClass* Z_Construct_UClass_UOscDispatcher_NoRegister();
	OSC_API class UClass* Z_Construct_UClass_UOscDispatcher();
	OSC_API class UFunction* Z_Construct_UFunction_UOscFunctionLibrary_AddSendOscTarget();
	OSC_API class UFunction* Z_Construct_UFunction_UOscFunctionLibrary_AsBool();
	OSC_API class UFunction* Z_Construct_UFunction_UOscFunctionLibrary_AsFloat();
	OSC_API class UFunction* Z_Construct_UFunction_UOscFunctionLibrary_AsInt();
	OSC_API class UFunction* Z_Construct_UFunction_UOscFunctionLibrary_AsString();
	OSC_API class UFunction* Z_Construct_UFunction_UOscFunctionLibrary_FromBool();
	OSC_API class UFunction* Z_Construct_UFunction_UOscFunctionLibrary_FromFloat();
	OSC_API class UFunction* Z_Construct_UFunction_UOscFunctionLibrary_FromInt();
	OSC_API class UFunction* Z_Construct_UFunction_UOscFunctionLibrary_FromString();
	OSC_API class UFunction* Z_Construct_UFunction_UOscFunctionLibrary_PopBool();
	OSC_API class UFunction* Z_Construct_UFunction_UOscFunctionLibrary_PopFloat();
	OSC_API class UFunction* Z_Construct_UFunction_UOscFunctionLibrary_PopInt();
	OSC_API class UFunction* Z_Construct_UFunction_UOscFunctionLibrary_PopString();
	OSC_API class UFunction* Z_Construct_UFunction_UOscFunctionLibrary_PushBool();
	OSC_API class UFunction* Z_Construct_UFunction_UOscFunctionLibrary_PushFloat();
	OSC_API class UFunction* Z_Construct_UFunction_UOscFunctionLibrary_PushInt();
	OSC_API class UFunction* Z_Construct_UFunction_UOscFunctionLibrary_PushString();
	OSC_API class UFunction* Z_Construct_UFunction_UOscFunctionLibrary_SendOsc();
	OSC_API class UClass* Z_Construct_UClass_UOscFunctionLibrary_NoRegister();
	OSC_API class UClass* Z_Construct_UClass_UOscFunctionLibrary();
	OSC_API class UFunction* Z_Construct_UFunction_AOscReceiverActor_OnOscReceived();
	OSC_API class UClass* Z_Construct_UClass_AOscReceiverActor_NoRegister();
	OSC_API class UClass* Z_Construct_UClass_AOscReceiverActor();
	OSC_API class UFunction* Z_Construct_UDelegateFunction_OSC_ComponentOscReceivedSignature__DelegateSignature();
	OSC_API class UClass* Z_Construct_UClass_UOscReceiverComponent_NoRegister();
	OSC_API class UClass* Z_Construct_UClass_UOscReceiverComponent();
	OSC_API class UClass* Z_Construct_UClass_UOscSettings_NoRegister();
	OSC_API class UClass* Z_Construct_UClass_UOscSettings();
	OSC_API class UPackage* Z_Construct_UPackage_OSC();
	UScriptStruct* Z_Construct_UScriptStruct_FOscDataElemStruct()
	{
		UPackage* Outer=Z_Construct_UPackage_OSC();
		extern uint32 Get_Z_Construct_UScriptStruct_FOscDataElemStruct_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReload(Outer, TEXT("OscDataElemStruct"), sizeof(FOscDataElemStruct), Get_Z_Construct_UScriptStruct_FOscDataElemStruct_CRC());
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OscDataElemStruct"), RF_Public|RF_Transient|RF_Native) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FOscDataElemStruct>, EStructFlags(0x00000001));
			UProperty* NewProp_Data = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Data"), RF_Public|RF_Transient|RF_Native) UInt64Property(CPP_PROPERTY_BASE(Data, FOscDataElemStruct), 0x0000000000000000);
			UProperty* NewProp_Type = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Type"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Type, FOscDataElemStruct), 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/Common/OscDataElemStruct.h"));
			MetaData->SetValue(NewProp_Data, TEXT("ModuleRelativePath"), TEXT("Private/Common/OscDataElemStruct.h"));
			MetaData->SetValue(NewProp_Type, TEXT("ModuleRelativePath"), TEXT("Private/Common/OscDataElemStruct.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FOscDataElemStruct_CRC() { return 2140423416U; }
	UClass* Z_Construct_UClass_UOscDispatcher_NoRegister()
	{
		return UOscDispatcher::StaticClass();
	}
	UClass* Z_Construct_UClass_UOscDispatcher()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_OSC();
			OuterClass = UOscDispatcher::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Receive/OscDispatcher.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/Receive/OscDispatcher.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Singleton that dispatches the OSC messages to listeners."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UOscDispatcher(Z_Construct_UClass_UOscDispatcher, TEXT("UOscDispatcher"));
	UFunction* Z_Construct_UFunction_UOscFunctionLibrary_AddSendOscTarget()
	{
		struct OscFunctionLibrary_eventAddSendOscTarget_Parms
		{
			FString IpPort;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UOscFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AddSendOscTarget"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(OscFunctionLibrary_eventAddSendOscTarget_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, OscFunctionLibrary_eventAddSendOscTarget_Parms), 0x0000000000000580);
			UProperty* NewProp_IpPort = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IpPort"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(IpPort, OscFunctionLibrary_eventAddSendOscTarget_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("OSC"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Common/OscFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("@brief Add Ip:Port to the available OSC send targets.\n@param IpPort \"ip:port\". e.g. \"192.168.0.1:7777\"\n@return The created TargetIndex to pass to the SendOsc function.\n\nUse this function to add target at runtime. Generally, it is best\nto define your targets in the OSC plugin settings.\n\n@see SendOsc"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UOscFunctionLibrary_AsBool()
	{
		struct OscFunctionLibrary_eventAsBool_Parms
		{
			FOscDataElemStruct input;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UOscFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AsBool"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(OscFunctionLibrary_eventAsBool_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, OscFunctionLibrary_eventAsBool_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, OscFunctionLibrary_eventAsBool_Parms), 0x0000000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, OscFunctionLibrary_eventAsBool_Parms), sizeof(bool), true);
			UProperty* NewProp_input = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("input"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(input, OscFunctionLibrary_eventAsBool_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FOscDataElemStruct());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("OSC"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Common/OscFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Interpret an OSC argument as a boolean"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UOscFunctionLibrary_AsFloat()
	{
		struct OscFunctionLibrary_eventAsFloat_Parms
		{
			FOscDataElemStruct input;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UOscFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AsFloat"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(OscFunctionLibrary_eventAsFloat_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, OscFunctionLibrary_eventAsFloat_Parms), 0x0000000000000580);
			UProperty* NewProp_input = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("input"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(input, OscFunctionLibrary_eventAsFloat_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FOscDataElemStruct());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("OSC"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Common/OscFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Interpret an OSC argument as a floating point."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UOscFunctionLibrary_AsInt()
	{
		struct OscFunctionLibrary_eventAsInt_Parms
		{
			FOscDataElemStruct input;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UOscFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AsInt"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(OscFunctionLibrary_eventAsInt_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, OscFunctionLibrary_eventAsInt_Parms), 0x0000000000000580);
			UProperty* NewProp_input = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("input"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(input, OscFunctionLibrary_eventAsInt_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FOscDataElemStruct());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("OSC"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Common/OscFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Interpret an OSC argument as a integer."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UOscFunctionLibrary_AsString()
	{
		struct OscFunctionLibrary_eventAsString_Parms
		{
			FOscDataElemStruct input;
			FName ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UOscFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AsString"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(OscFunctionLibrary_eventAsString_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(ReturnValue, OscFunctionLibrary_eventAsString_Parms), 0x0000000000000580);
			UProperty* NewProp_input = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("input"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(input, OscFunctionLibrary_eventAsString_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_FOscDataElemStruct());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("OSC"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Common/OscFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Interpret an OSC argument as a string."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UOscFunctionLibrary_FromBool()
	{
		struct OscFunctionLibrary_eventFromBool_Parms
		{
			bool input;
			FOscDataElemStruct ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UOscFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FromBool"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(OscFunctionLibrary_eventFromBool_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, OscFunctionLibrary_eventFromBool_Parms), 0x0000000000000580, Z_Construct_UScriptStruct_FOscDataElemStruct());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(input, OscFunctionLibrary_eventFromBool_Parms, bool);
			UProperty* NewProp_input = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("input"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(input, OscFunctionLibrary_eventFromBool_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(input, OscFunctionLibrary_eventFromBool_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("OSC"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Common/OscFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Create an OSC argument from a boolean"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UOscFunctionLibrary_FromFloat()
	{
		struct OscFunctionLibrary_eventFromFloat_Parms
		{
			float input;
			FOscDataElemStruct ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UOscFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FromFloat"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(OscFunctionLibrary_eventFromFloat_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, OscFunctionLibrary_eventFromFloat_Parms), 0x0000000000000580, Z_Construct_UScriptStruct_FOscDataElemStruct());
			UProperty* NewProp_input = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("input"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(input, OscFunctionLibrary_eventFromFloat_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("OSC"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Common/OscFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Create an OSC argument from a floating point."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UOscFunctionLibrary_FromInt()
	{
		struct OscFunctionLibrary_eventFromInt_Parms
		{
			int32 input;
			FOscDataElemStruct ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UOscFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FromInt"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(OscFunctionLibrary_eventFromInt_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, OscFunctionLibrary_eventFromInt_Parms), 0x0000000000000580, Z_Construct_UScriptStruct_FOscDataElemStruct());
			UProperty* NewProp_input = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("input"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(input, OscFunctionLibrary_eventFromInt_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("OSC"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Common/OscFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Create an OSC argument from a integer."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UOscFunctionLibrary_FromString()
	{
		struct OscFunctionLibrary_eventFromString_Parms
		{
			FName input;
			FOscDataElemStruct ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UOscFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FromString"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(OscFunctionLibrary_eventFromString_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, OscFunctionLibrary_eventFromString_Parms), 0x0000000000000580, Z_Construct_UScriptStruct_FOscDataElemStruct());
			UProperty* NewProp_input = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("input"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(input, OscFunctionLibrary_eventFromString_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("OSC"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Common/OscFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Create an OSC argument from a string."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UOscFunctionLibrary_PopBool()
	{
		struct OscFunctionLibrary_eventPopBool_Parms
		{
			TArray<FOscDataElemStruct> input;
			TArray<FOscDataElemStruct> output;
			bool Value;
		};
		UObject* Outer=Z_Construct_UClass_UOscFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PopBool"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(OscFunctionLibrary_eventPopBool_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Value, OscFunctionLibrary_eventPopBool_Parms, bool);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Value, OscFunctionLibrary_eventPopBool_Parms), 0x0000000000000180, CPP_BOOL_PROPERTY_BITMASK(Value, OscFunctionLibrary_eventPopBool_Parms), sizeof(bool), true);
			UProperty* NewProp_output = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("output"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(output, OscFunctionLibrary_eventPopBool_Parms), 0x0000000000000180);
			UProperty* NewProp_output_Inner = new(EC_InternalUseOnlyConstructor, NewProp_output, TEXT("output"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FOscDataElemStruct());
			UProperty* NewProp_input = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("input"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(input, OscFunctionLibrary_eventPopBool_Parms), 0x0000000008000182);
			UProperty* NewProp_input_Inner = new(EC_InternalUseOnlyConstructor, NewProp_input, TEXT("input"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FOscDataElemStruct());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("OSC"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Common/OscFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the next value from an OSC message as a boolean."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UOscFunctionLibrary_PopFloat()
	{
		struct OscFunctionLibrary_eventPopFloat_Parms
		{
			TArray<FOscDataElemStruct> input;
			TArray<FOscDataElemStruct> output;
			float Value;
		};
		UObject* Outer=Z_Construct_UClass_UOscFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PopFloat"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(OscFunctionLibrary_eventPopFloat_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Value, OscFunctionLibrary_eventPopFloat_Parms), 0x0000000000000180);
			UProperty* NewProp_output = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("output"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(output, OscFunctionLibrary_eventPopFloat_Parms), 0x0000000000000180);
			UProperty* NewProp_output_Inner = new(EC_InternalUseOnlyConstructor, NewProp_output, TEXT("output"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FOscDataElemStruct());
			UProperty* NewProp_input = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("input"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(input, OscFunctionLibrary_eventPopFloat_Parms), 0x0000000008000182);
			UProperty* NewProp_input_Inner = new(EC_InternalUseOnlyConstructor, NewProp_input, TEXT("input"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FOscDataElemStruct());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("OSC"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Common/OscFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the next value from an OSC message as a floating point."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UOscFunctionLibrary_PopInt()
	{
		struct OscFunctionLibrary_eventPopInt_Parms
		{
			TArray<FOscDataElemStruct> input;
			TArray<FOscDataElemStruct> output;
			int32 Value;
		};
		UObject* Outer=Z_Construct_UClass_UOscFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PopInt"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(OscFunctionLibrary_eventPopInt_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Value, OscFunctionLibrary_eventPopInt_Parms), 0x0000000000000180);
			UProperty* NewProp_output = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("output"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(output, OscFunctionLibrary_eventPopInt_Parms), 0x0000000000000180);
			UProperty* NewProp_output_Inner = new(EC_InternalUseOnlyConstructor, NewProp_output, TEXT("output"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FOscDataElemStruct());
			UProperty* NewProp_input = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("input"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(input, OscFunctionLibrary_eventPopInt_Parms), 0x0000000008000182);
			UProperty* NewProp_input_Inner = new(EC_InternalUseOnlyConstructor, NewProp_input, TEXT("input"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FOscDataElemStruct());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("OSC"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Common/OscFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the next value from an OSC message as a integer."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UOscFunctionLibrary_PopString()
	{
		struct OscFunctionLibrary_eventPopString_Parms
		{
			TArray<FOscDataElemStruct> input;
			TArray<FOscDataElemStruct> output;
			FName Value;
		};
		UObject* Outer=Z_Construct_UClass_UOscFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PopString"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(OscFunctionLibrary_eventPopString_Parms));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(Value, OscFunctionLibrary_eventPopString_Parms), 0x0000000000000180);
			UProperty* NewProp_output = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("output"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(output, OscFunctionLibrary_eventPopString_Parms), 0x0000000000000180);
			UProperty* NewProp_output_Inner = new(EC_InternalUseOnlyConstructor, NewProp_output, TEXT("output"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FOscDataElemStruct());
			UProperty* NewProp_input = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("input"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(input, OscFunctionLibrary_eventPopString_Parms), 0x0000000008000182);
			UProperty* NewProp_input_Inner = new(EC_InternalUseOnlyConstructor, NewProp_input, TEXT("input"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FOscDataElemStruct());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("OSC"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Common/OscFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the next value from an OSC message as a string."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UOscFunctionLibrary_PushBool()
	{
		struct OscFunctionLibrary_eventPushBool_Parms
		{
			TArray<FOscDataElemStruct> input;
			bool Value;
			TArray<FOscDataElemStruct> output;
		};
		UObject* Outer=Z_Construct_UClass_UOscFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PushBool"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(OscFunctionLibrary_eventPushBool_Parms));
			UProperty* NewProp_output = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("output"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(output, OscFunctionLibrary_eventPushBool_Parms), 0x0000000000000180);
			UProperty* NewProp_output_Inner = new(EC_InternalUseOnlyConstructor, NewProp_output, TEXT("output"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FOscDataElemStruct());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Value, OscFunctionLibrary_eventPushBool_Parms, bool);
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Value, OscFunctionLibrary_eventPushBool_Parms), 0x0000000000000080, CPP_BOOL_PROPERTY_BITMASK(Value, OscFunctionLibrary_eventPushBool_Parms), sizeof(bool), true);
			UProperty* NewProp_input = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("input"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(input, OscFunctionLibrary_eventPushBool_Parms), 0x0000000008000182);
			UProperty* NewProp_input_Inner = new(EC_InternalUseOnlyConstructor, NewProp_input, TEXT("input"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FOscDataElemStruct());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AutoCreateRefTerm"), TEXT("input"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("OSC"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Common/OscFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Add a boolean value to an OSC message."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UOscFunctionLibrary_PushFloat()
	{
		struct OscFunctionLibrary_eventPushFloat_Parms
		{
			TArray<FOscDataElemStruct> input;
			float Value;
			TArray<FOscDataElemStruct> output;
		};
		UObject* Outer=Z_Construct_UClass_UOscFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PushFloat"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(OscFunctionLibrary_eventPushFloat_Parms));
			UProperty* NewProp_output = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("output"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(output, OscFunctionLibrary_eventPushFloat_Parms), 0x0000000000000180);
			UProperty* NewProp_output_Inner = new(EC_InternalUseOnlyConstructor, NewProp_output, TEXT("output"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FOscDataElemStruct());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(Value, OscFunctionLibrary_eventPushFloat_Parms), 0x0000000000000080);
			UProperty* NewProp_input = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("input"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(input, OscFunctionLibrary_eventPushFloat_Parms), 0x0000000008000182);
			UProperty* NewProp_input_Inner = new(EC_InternalUseOnlyConstructor, NewProp_input, TEXT("input"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FOscDataElemStruct());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AutoCreateRefTerm"), TEXT("input"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("OSC"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Common/OscFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Add a floating point value to an OSC message."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UOscFunctionLibrary_PushInt()
	{
		struct OscFunctionLibrary_eventPushInt_Parms
		{
			TArray<FOscDataElemStruct> input;
			int32 Value;
			TArray<FOscDataElemStruct> output;
		};
		UObject* Outer=Z_Construct_UClass_UOscFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PushInt"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(OscFunctionLibrary_eventPushInt_Parms));
			UProperty* NewProp_output = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("output"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(output, OscFunctionLibrary_eventPushInt_Parms), 0x0000000000000180);
			UProperty* NewProp_output_Inner = new(EC_InternalUseOnlyConstructor, NewProp_output, TEXT("output"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FOscDataElemStruct());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(Value, OscFunctionLibrary_eventPushInt_Parms), 0x0000000000000080);
			UProperty* NewProp_input = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("input"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(input, OscFunctionLibrary_eventPushInt_Parms), 0x0000000008000182);
			UProperty* NewProp_input_Inner = new(EC_InternalUseOnlyConstructor, NewProp_input, TEXT("input"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FOscDataElemStruct());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AutoCreateRefTerm"), TEXT("input"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("OSC"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Common/OscFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Add a integer value to an OSC message."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UOscFunctionLibrary_PushString()
	{
		struct OscFunctionLibrary_eventPushString_Parms
		{
			TArray<FOscDataElemStruct> input;
			FName Value;
			TArray<FOscDataElemStruct> output;
		};
		UObject* Outer=Z_Construct_UClass_UOscFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PushString"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x14422401, 65535, sizeof(OscFunctionLibrary_eventPushString_Parms));
			UProperty* NewProp_output = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("output"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(output, OscFunctionLibrary_eventPushString_Parms), 0x0000000000000180);
			UProperty* NewProp_output_Inner = new(EC_InternalUseOnlyConstructor, NewProp_output, TEXT("output"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FOscDataElemStruct());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Value"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(Value, OscFunctionLibrary_eventPushString_Parms), 0x0000000000000080);
			UProperty* NewProp_input = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("input"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(input, OscFunctionLibrary_eventPushString_Parms), 0x0000000008000182);
			UProperty* NewProp_input_Inner = new(EC_InternalUseOnlyConstructor, NewProp_input, TEXT("input"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FOscDataElemStruct());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AutoCreateRefTerm"), TEXT("input"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("OSC"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Common/OscFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Add a string value to an OSC message."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UOscFunctionLibrary_SendOsc()
	{
		struct OscFunctionLibrary_eventSendOsc_Parms
		{
			FName Address;
			TArray<FOscDataElemStruct> Data;
			int32 TargetIndex;
		};
		UObject* Outer=Z_Construct_UClass_UOscFunctionLibrary();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendOsc"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(OscFunctionLibrary_eventSendOsc_Parms));
			UProperty* NewProp_TargetIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TargetIndex"), RF_Public|RF_Transient|RF_Native) UIntProperty(CPP_PROPERTY_BASE(TargetIndex, OscFunctionLibrary_eventSendOsc_Parms), 0x0000000000000080);
			UProperty* NewProp_Data = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Data"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Data, OscFunctionLibrary_eventSendOsc_Parms), 0x0000000008000182);
			UProperty* NewProp_Data_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Data, TEXT("Data"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FOscDataElemStruct());
			UProperty* NewProp_Address = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Address"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(Address, OscFunctionLibrary_eventSendOsc_Parms), 0x0000000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AutoCreateRefTerm"), TEXT("Data"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("OSC"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Common/OscFunctionLibrary.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("@brief Send an OSC message.\n@param Address OSC address.\n@param Data result of successive PushFloat/Int/String/etc.\n@param Index index of the destination, -1 for all destinations. (SendTarget list of the plugin settings)"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UOscFunctionLibrary_NoRegister()
	{
		return UOscFunctionLibrary::StaticClass();
	}
	UClass* Z_Construct_UClass_UOscFunctionLibrary()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlueprintFunctionLibrary();
			Z_Construct_UPackage_OSC();
			OuterClass = UOscFunctionLibrary::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;

				OuterClass->LinkChild(Z_Construct_UFunction_UOscFunctionLibrary_AddSendOscTarget());
				OuterClass->LinkChild(Z_Construct_UFunction_UOscFunctionLibrary_AsBool());
				OuterClass->LinkChild(Z_Construct_UFunction_UOscFunctionLibrary_AsFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_UOscFunctionLibrary_AsInt());
				OuterClass->LinkChild(Z_Construct_UFunction_UOscFunctionLibrary_AsString());
				OuterClass->LinkChild(Z_Construct_UFunction_UOscFunctionLibrary_FromBool());
				OuterClass->LinkChild(Z_Construct_UFunction_UOscFunctionLibrary_FromFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_UOscFunctionLibrary_FromInt());
				OuterClass->LinkChild(Z_Construct_UFunction_UOscFunctionLibrary_FromString());
				OuterClass->LinkChild(Z_Construct_UFunction_UOscFunctionLibrary_PopBool());
				OuterClass->LinkChild(Z_Construct_UFunction_UOscFunctionLibrary_PopFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_UOscFunctionLibrary_PopInt());
				OuterClass->LinkChild(Z_Construct_UFunction_UOscFunctionLibrary_PopString());
				OuterClass->LinkChild(Z_Construct_UFunction_UOscFunctionLibrary_PushBool());
				OuterClass->LinkChild(Z_Construct_UFunction_UOscFunctionLibrary_PushFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_UOscFunctionLibrary_PushInt());
				OuterClass->LinkChild(Z_Construct_UFunction_UOscFunctionLibrary_PushString());
				OuterClass->LinkChild(Z_Construct_UFunction_UOscFunctionLibrary_SendOsc());

				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UOscFunctionLibrary_AddSendOscTarget()); // 1150482675
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UOscFunctionLibrary_AsBool()); // 2360255292
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UOscFunctionLibrary_AsFloat()); // 1997336705
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UOscFunctionLibrary_AsInt()); // 2755794449
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UOscFunctionLibrary_AsString()); // 991554231
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UOscFunctionLibrary_FromBool()); // 1275572001
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UOscFunctionLibrary_FromFloat()); // 2691063837
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UOscFunctionLibrary_FromInt()); // 1706452021
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UOscFunctionLibrary_FromString()); // 1377209352
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UOscFunctionLibrary_PopBool()); // 752241956
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UOscFunctionLibrary_PopFloat()); // 2776821644
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UOscFunctionLibrary_PopInt()); // 1705416968
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UOscFunctionLibrary_PopString()); // 2723469931
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UOscFunctionLibrary_PushBool()); // 2025148262
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UOscFunctionLibrary_PushFloat()); // 2471561363
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UOscFunctionLibrary_PushInt()); // 935126943
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UOscFunctionLibrary_PushString()); // 2784467462
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_UOscFunctionLibrary_SendOsc()); // 1806171369
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Common/OscFunctionLibrary.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/Common/OscFunctionLibrary.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UOscFunctionLibrary(Z_Construct_UClass_UOscFunctionLibrary, TEXT("UOscFunctionLibrary"));
	DEFINE_VTABLE_PTR_HELPER_CTOR(UOscFunctionLibrary);
	UFunction* Z_Construct_UFunction_AOscReceiverActor_OnOscReceived()
	{
		UObject* Outer=Z_Construct_UClass_AOscReceiverActor();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnOscReceived"), RF_Public|RF_Transient|RF_Native) UFunction(FObjectInitializer(), NULL, 0x08420800, 65535, sizeof(OscReceiverActor_eventOnOscReceived_Parms));
			UProperty* NewProp_Data = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Data"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Data, OscReceiverActor_eventOnOscReceived_Parms), 0x0000000008000182);
			UProperty* NewProp_Data_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Data, TEXT("Data"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FOscDataElemStruct());
			UProperty* NewProp_Address = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Address"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(Address, OscReceiverActor_eventOnOscReceived_Parms), 0x0000000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("OSC"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Receive/OscReceiverActor.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AOscReceiverActor_NoRegister()
	{
		return AOscReceiverActor::StaticClass();
	}
	UClass* Z_Construct_UClass_AOscReceiverActor()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage_OSC();
			OuterClass = AOscReceiverActor::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_AOscReceiverActor_OnOscReceived());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_AddressFilter = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AddressFilter"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(AddressFilter, AOscReceiverActor), 0x0000000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AOscReceiverActor_OnOscReceived()); // 4284050600
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("OSC"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Receive/OscReceiverActor.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/Receive/OscReceiverActor.h"));
				MetaData->SetValue(NewProp_AddressFilter, TEXT("Category"), TEXT("OSC"));
				MetaData->SetValue(NewProp_AddressFilter, TEXT("ModuleRelativePath"), TEXT("Private/Receive/OscReceiverActor.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AOscReceiverActor(Z_Construct_UClass_AOscReceiverActor, TEXT("AOscReceiverActor"));
	UFunction* Z_Construct_UDelegateFunction_OSC_ComponentOscReceivedSignature__DelegateSignature()
	{
		struct _Script_OSC_eventComponentOscReceivedSignature_Parms
		{
			FName Address;
			TArray<FOscDataElemStruct> Data;
		};
		UObject* Outer=Z_Construct_UPackage_OSC();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ComponentOscReceivedSignature__DelegateSignature"), RF_Public|RF_Transient|RF_Native) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_OSC_eventComponentOscReceivedSignature_Parms));
			UProperty* NewProp_Data = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Data"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Data, _Script_OSC_eventComponentOscReceivedSignature_Parms), 0x0000000008000182);
			UProperty* NewProp_Data_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Data, TEXT("Data"), RF_Public|RF_Transient|RF_Native) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FOscDataElemStruct());
			UProperty* NewProp_Address = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Address"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(Address, _Script_OSC_eventComponentOscReceivedSignature_Parms), 0x0000000008000182);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/Receive/OscReceiverComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("declare the OnOscReceived event type"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UOscReceiverComponent_NoRegister()
	{
		return UOscReceiverComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UOscReceiverComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage_OSC();
			OuterClass = UOscReceiverComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20A00080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OnOscReceived = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnOscReceived"), RF_Public|RF_Transient|RF_Native) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnOscReceived, UOscReceiverComponent), 0x0000000010080000, Z_Construct_UDelegateFunction_OSC_ComponentOscReceivedSignature__DelegateSignature());
				UProperty* NewProp_AddressFilter = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AddressFilter"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(AddressFilter, UOscReceiverComponent), 0x0000000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("OSC"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Receive/OscReceiverComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/Receive/OscReceiverComponent.h"));
				MetaData->SetValue(NewProp_OnOscReceived, TEXT("Category"), TEXT("OSC"));
				MetaData->SetValue(NewProp_OnOscReceived, TEXT("ModuleRelativePath"), TEXT("Private/Receive/OscReceiverComponent.h"));
				MetaData->SetValue(NewProp_AddressFilter, TEXT("Category"), TEXT("OSC"));
				MetaData->SetValue(NewProp_AddressFilter, TEXT("ModuleRelativePath"), TEXT("Private/Receive/OscReceiverComponent.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UOscReceiverComponent(Z_Construct_UClass_UOscReceiverComponent, TEXT("UOscReceiverComponent"));
	UClass* Z_Construct_UClass_UOscSettings_NoRegister()
	{
		return UOscSettings::StaticClass();
	}
	UClass* Z_Construct_UClass_UOscSettings()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage_OSC();
			OuterClass = UOscSettings::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000084;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Inputs = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Inputs"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(Inputs, UOscSettings), 0x0000000000004001);
				UProperty* NewProp_Inputs_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Inputs, TEXT("Inputs"), RF_Public|RF_Transient|RF_Native) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000);
				UProperty* NewProp_SendTargets = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SendTargets"), RF_Public|RF_Transient|RF_Native) UArrayProperty(CPP_PROPERTY_BASE(SendTargets, UOscSettings), 0x0000000000004001);
				UProperty* NewProp_SendTargets_Inner = new(EC_InternalUseOnlyConstructor, NewProp_SendTargets, TEXT("SendTargets"), RF_Public|RF_Transient|RF_Native) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000004000);
				UProperty* NewProp_ReceiveFrom = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ReceiveFrom"), RF_Public|RF_Transient|RF_Native) UStrProperty(CPP_PROPERTY_BASE(ReceiveFrom, UOscSettings), 0x0000000000004001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Engine"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("OscSettings.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/OscSettings.h"));
				MetaData->SetValue(NewProp_Inputs, TEXT("Category"), TEXT("Input"));
				MetaData->SetValue(NewProp_Inputs, TEXT("ModuleRelativePath"), TEXT("Private/OscSettings.h"));
				MetaData->SetValue(NewProp_Inputs, TEXT("ToolTip"), TEXT("List of the messages treated as inputs.\n\nEvery entry adds a key in the input mapping project setting.\ne.g. \"/position/x\" -> \"OSC_position_x\""));
				MetaData->SetValue(NewProp_SendTargets, TEXT("Category"), TEXT("Send"));
				MetaData->SetValue(NewProp_SendTargets, TEXT("ModuleRelativePath"), TEXT("Private/OscSettings.h"));
				MetaData->SetValue(NewProp_ReceiveFrom, TEXT("Category"), TEXT("Receive"));
				MetaData->SetValue(NewProp_ReceiveFrom, TEXT("ModuleRelativePath"), TEXT("Private/OscSettings.h"));
				MetaData->SetValue(NewProp_ReceiveFrom, TEXT("ToolTip"), TEXT("Specify the [address:]port to listen to.\n\ne.g.\n- \"8000\" listen to messages from any sender on port 8000.  [default]\n- \"224.0.0.100:8000\" listen multi-cast messages of group 224.0.0.100 on port 8000.\n- \"192.168.0.1:8000\" listen messages addressed specifically to 192.168.0.1 on port 8000, useful if there are several addresses for this machine."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UOscSettings(Z_Construct_UClass_UOscSettings, TEXT("UOscSettings"));
	UPackage* Z_Construct_UPackage_OSC()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/OSC")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0xA2A421C6;
			Guid.B = 0x10DF878F;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

			Z_Construct_UDelegateFunction_OSC_ComponentOscReceivedSignature__DelegateSignature();
		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
